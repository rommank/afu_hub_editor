type EventData @model @auth(rules: [{allow: public, provider: iam}, {allow: private, provider: userPools}]) {
  id: ID!
  date: AWSDate!
  title: LocalizedText!
  text: LocalizedText
  topicdataID: ID! @index(name: "byTopicData")
  icon: String
}

type LocalizedText {
  uk: String
  en: String
}

type ImageData @model @auth(rules: [{allow: public, provider: iam}, {allow: private, provider: userPools}]) {
  id: ID!
  key: String
}

enum Topic {
  MODERN_ARMY
  POKROVA
}

type TopicData @model @auth(rules: [{allow: public, provider: iam}, {allow: private, provider: userPools}]) {
  id: ID!
  title: LocalizedText!
  sections: [SectionData] @hasMany(indexName: "byTopicData", fields: ["id"])
  type: Topic!
  events: [EventData] @hasMany(indexName: "byTopicData", fields: ["id"])
  startDate: AWSDate!
  endDate: AWSDate!
  titleImageKey: String
  titleImageUrl: String
}

type Quote {
  text: LocalizedText
  author: LocalizedText
}

type TermToExplain {
  term: LocalizedText
  meaning: LocalizedText
}

type SectionData @model @auth(rules: [{allow: public, provider: iam}, {allow: private, provider: userPools}]) {
  id: ID!
  name: LocalizedText!
  text1: LocalizedText!
  text2: LocalizedText
  quote1: Quote
  callout1: LocalizedText
  callout2: LocalizedText
  photo2: String
  photo3: String
  icon: String
  topicDataID: ID! @index(name: "byTopicData")
  imageData: ImageData @hasOne
  order: Int!
  termToExplain1: TermToExplain
  photo1: String
}
 